<?xml version="1.0"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" 
  xmlns:s="library://ns.adobe.com/flex/spark" 
  xmlns:m="*" 
  verticalScrollPolicy="off"  
  horizontalScrollPolicy="off" 
  creationComplete="{Init()}"  

>

  <mx:Style>    	     

  </mx:Style>    	     


  <mx:Script>  
    <![CDATA[    

      import flextrace.Dumper;
      //import mx.controls.VideoDisplay;
      import mx.events.VideoEvent;      
      import com.gskinner.utils.SWFBridgeAS3;	
      import my_components.wr;	
      import mx.core.mx_internal;
	
      var clientObj:Object = {'play':play};      

      var session:Object;  	
      var s_o:SharedObject=null;

      var myBridge:SWFBridgeAS3;
                 
      var src:Array;
      var v_crnt=0;
            
      var src_id:String;
      
      //var v:VideoDisplay;	

      private function Init() {	       
		              
	src = parameters.src.split(";");
        src.pop();

        var src_id:String = wr.so_id(src[0]);
        
        try {       
          s_o= SharedObject.getLocal(src_id,"/");
        } catch (e:*) {}                
    	  	
        if (s_o) session = s_o.data;  	
        else session = new Object();  	
                      	
        myBridge = new SWFBridgeAS3(parameters.lc_id, clientObj)
                               
        if (!session.play || ((v_crnt=src.indexOf(session.source)) == -1)) {

	  session.startTime = 0;
	  session.source = src[v_crnt=0];   
	}        
	
	/*					
	v = new VideoDisplay();
	this.addChild(v);
	v.width=Number(parameters.w);
	v.height=Number(parameters.h);
	v.maintainAspectRatio=false;
	*/
	
	v.addEventListener("playheadUpdate",timer_handlr,false,0,true);
	v.addEventListener("complete",play_end,false,0,true);
	v.addEventListener("progress",V_Init,false,0,true);
	//v.addEventListener("remove",v_remove,false,0,true);
	

	v.source = session.source		
	

      }

      private function V_Init(e:ProgressEvent) {	       
		
	if (e.bytesLoaded < e.bytesTotal)	
	  return
			
	v.playheadTime = Number(session.startTime);
        play(session.play || parameters.play)

      }
      
      private function play(bPlay:Boolean = true) {
                
        session.play = bPlay;

        if (bPlay) {                        	  
          v.play(); 
        }
        else {
          v.pause();
	  //v_stack.on_pause(src_id);
	}
	
      }
      
      private function timer_handlr(e:VideoEvent) {	

	session.startTime = e.playheadTime;
		
      }

      private function play_end(e:Event) {
        v.playheadTime = session.startTime = 0;  	  	  
	if (src.length == 1) play();
	else {
	  if (++v_crnt >= src.length) v_crnt=0
	  v.source = session.source = src[v_crnt];
      	  v.load();
      	}
      }

      
      
      private function v_remove() {
        v.mx_internal::videoPlayer.clear()       
        v.stop();
        v.close();
	v.removeEventListener("playheadUpdate",timer_handlr);
	v.removeEventListener("complete",play_end);
	v.removeEventListener("progress",V_Init);
	//cnv.removeEventListener("removedFromStage",v_remove);
      	v.removeChild(v.mx_internal::videoPlayer);
      	v.mx_internal::videoPlayer=null;
        v.source=null;

	var timer:Timer = new Timer(200);
	
	timer.addEventListener("timer",t_handlr);
	timer.start();

      	System.gc();

        try { 
           new LocalConnection().connect('foo'); 
           new LocalConnection().connect('foo'); 
        } catch (e:*) {} 

        cnv.removeChild(v);

      	System.gc();

      }	  
      	  	
	
      private function t_handlr(e:TimerEvent) {
        Timer(e.target).stop();
	v.removeEventListener("removedFromStage",v_remove);
      
      	System.gc();

        try { 
           new LocalConnection().connect('foo'); 
           new LocalConnection().connect('foo'); 
        } catch (e:*) {} 

      	System.gc();

            
      }



    ]]>    

  </mx:Script
  
  >  


  <mx:Canvas id="cnv"
    
  >
  
  <mx:VideoDisplay  id="v"  width="{parameters.w}"  height="{parameters.h}" 
    maintainAspectRatio="false" removedFromStage="{v_remove()}" />
  
  </mx:Canvas>
       
</mx:Application>
